DROP TABLE IF EXISTS AUTHORITIES;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS LOG;
DROP TABLE IF EXISTS WORD;
DROP TABLE IF EXISTS GLOSSARY;
DROP TABLE IF EXISTS GLOSSARY_WORD;

--USER TABLE
CREATE TABLE IF NOT EXISTS USER (
    IDUSER INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
    USERNAME VARCHAR(255) NOT NULL PRIMARY KEY,
    PASSWORD  VARCHAR(255) NOT NULL,
    ENABLED BOOLEAN NOT NULL
);

--AUTHORITIES TABLE
CREATE TABLE IF NOT EXISTS AUTHORITIES(
      USERNAME VARCHAR(255) NOT NULL,
      AUTHORITY VARCHAR(255) NOT NULL,
      CONSTRAINT FK_AUTHORITIES_USER FOREIGN KEY(USERNAME) REFERENCES USER(USERNAME));
;

--LOG TABLE
CREATE TABLE IF NOT EXISTS LOG (
	IDLOG INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
    LOGSTRING VARCHAR(1000) NULL,
    PRIMARY KEY (IDLOG)
);

--WORD TABLE
CREATE TABLE IF NOT EXISTS USER (
    IDWORD INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
    TITLE VARCHAR(255) NOT NULL PRIMARY KEY,
    TRANSCRIPTION  VARCHAR(255) NOT NULL,
    MEANING VARCHAR (500)
);

--GLOSSARY TABLE
CREATE TABLE IF NOT EXISTS GLOSSARY (
  IDGLOSSARY INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL PRIMARY KEY,
  NAME VARCHAR(255) NOT NULL,
  USERNAME VARCHAR(255),
  CONSTRAINT FK_GLOSSARY_USER FOREIGN KEY(USERNAME) REFERENCES USER(USERNAME));
)

--GLOSSARY_WORD TABLE
CREATE TABLE IF NOT EXISTS AUTHORITIES(
      GLOSSARYID INT NOT NULL,
      WORDID INT NOT NULL,
      CONSTRAINT FK_GLOSSAY_WORD FOREIGN KEY(GLOSSARYID) REFERENCES GLOSSARY(IDGLOSSARY));
      CONSTRAINT FK_WORD_GLOSSARY FOREIGN KEY(WORDID) REFERENCES WORD(IDWORD));
;

--TEST TABLE
CREATE TABLE IF NOT EXISTS TEST (
	IDTEST INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
    TESTCOLUMN VARCHAR(1000) NULL,
    PRIMARY KEY (IDTEST)
);